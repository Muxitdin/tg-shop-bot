const { Scenes } = require("telegraf");
const User = require("../models/User");
const { mainMenu } = require('../keyboards/mainMenu');

const registrationScene = new Scenes.WizardScene(
    "registrationScene",
    async (ctx) => {
        await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:");
        return ctx.wizard.next();
    },
    async (ctx) => {
        ctx.session.name = ctx.message.text;
        await ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º):", {
            reply_markup: {
                keyboard: [[{ text: "üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact: true }]],
                resize_keyboard: true,
                one_time_keyboard: true,
            },
        });
        return ctx.wizard.next();
    },
    async (ctx) => {
        const contact = ctx.message.contact || ctx.message.text;
        if (!contact) return ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.");

        const newUser = new User({
            telegramId: ctx.from.id,
            name: ctx.session.name,
            phone: contact.phone_number || contact,
        });

        await newUser.save();
        await ctx.reply("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.", mainMenu);
        return ctx.scene.leave();
    }
);

module.exports = { registrationScene };
