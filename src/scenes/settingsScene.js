const { Scenes, Markup } = require("telegraf");
const User = require("../models/User");
const { mainMenu } = require("../keyboards/mainMenu");
const { settingsMenu } = require("../keyboards/settingsMenu");

const settingsScene = new Scenes.BaseScene("settingsScene");

settingsScene.enter(async (ctx) => {
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", settingsMenu);
});
settingsScene.on("text", async (ctx) => {
    const text = ctx.message.text;

    if (text === "üá∑üá∫ –†—É—Å—Å–∫–∏–π") {
        await User.updateOne({ telegramId: ctx.from.id }, { language: "ru" });
        await ctx.reply("–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π.", Markup.removeKeyboard());
    } else if (text === "üá∫üáø O ªzbekcha") {
        await User.updateOne({ telegramId: ctx.from.id }, { language: "uz" });
        await ctx.reply("Til o‚Äòzbek tiliga o‚Äòzgartirildi.", Markup.removeKeyboard());
    } else {
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.");
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", mainMenu);
    return ctx.scene.leave();
});

module.exports = { settingsScene };
